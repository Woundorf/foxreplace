<?xml version="1.0" encoding="UTF-8"?>
<!-- ***** BEGIN LICENSE BLOCK *****
  -   Version: MPL 1.1/GPL 2.0/LGPL 2.1
  -
  - The contents of this file are subject to the Mozilla Public License Version
  - 1.1 (the "License"); you may not use this file except in compliance with
  - the License. You may obtain a copy of the License at
  - http://www.mozilla.org/MPL/
  - 
  - Software distributed under the License is distributed on an "AS IS" basis,
  - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  - for the specific language governing rights and limitations under the
  - License.
  -
  - The Original Code is FoxReplace.
  -
  - The Initial Developer of the Original Code is
  - Marc Ruiz Altisent.
  - Portions created by the Initial Developer are Copyright (C) 2007
  - the Initial Developer. All Rights Reserved.
  -
  - Contributor(s):
  -
  - Alternatively, the contents of this file may be used under the terms of
  - either the GNU General Public License Version 2 or later (the "GPL"), or
  - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  - in which case the provisions of the GPL or the LGPL are applicable instead
  - of those above. If you wish to allow use of your version of this file only
  - under the terms of either the GPL or the LGPL, and not to allow others to
  - use your version of this file under the terms of the MPL, indicate your
  - decision by deleting the provisions above and replace them with the notice
  - and other provisions required by the GPL or the LGPL. If you do not delete
  - the provisions above, a recipient may use your version of this file under
  - the terms of any one of the MPL, the GPL or the LGPL.
  - 
  - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE bindings SYSTEM "chrome://foxreplace/locale/bindings.dtd">
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <binding id="inputTextBox">
    <resources>
      <stylesheet src="chrome://foxreplace/skin/bindings.css"/>
    </resources>
    <content onfocus="this.focus();">
      <xul:hbox flex="1">
        <xul:hbox class="inputTextBoxSelector" align="center" popup="_child">
          <xul:image class="inputTextBoxSelectorImage" anonid="selectorImage"/>
          <xul:image class="inputTextBoxSelectorDropmarker"/>
          <xul:menupopup position="before_start">
            <xul:menuitem class="menuitem-iconic inputTextBoxSelectorMenuItem" anonid="itemText" label="&text;"
                          oncommand="document.getBindingParent(this).isRegExp=false;"/>
            <xul:menuitem class="menuitem-iconic inputTextBoxSelectorMenuItem" anonid="itemRegExp" label="&regExp;"
                          oncommand="document.getBindingParent(this).isRegExp=true;"/>
          </xul:menupopup>
        </xul:hbox>
        <xul:textbox class="inputTextBox" anonid="textBox" flex="1"/>
      </xul:hbox>
    </content>
    <implementation>
      <constructor>
        this.isRegExp = false;
      </constructor>
      <field name="_selectorImage" readonly="true">
        document.getAnonymousElementByAttribute(this, "anonid", "selectorImage")
      </field>
      <field name="_textBox" readonly="true">
        document.getAnonymousElementByAttribute(this, "anonid", "textBox")
      </field>
      <field name="_isRegExp">
        false
      </field>
      <property name="value" onget="return this._textBox.value;" onset="this._textBox.value=val;"/>
      <property name="isRegExp" onget="return this._isRegExp;">
        <setter>
          this._isRegExp = val;
          this._selectorImage.setAttribute("regexp", val);
          this._textBox.setAttribute("regexp", val);
          if (val) this._textBox.emptyText = "&regExp;";
          else this._textBox.emptyText = "&text;";
        </setter>
      </property>
      <method name="focus">
        <body>
          if (!this._textBox.hasAttribute("focused")) this._textBox.focus();
        </body>
      </method>
    </implementation>
    <handlers>
      <handler event="keypress" keycode="VK_UP" action="this.isRegExp=false;"/>
      <handler event="keypress" keycode="VK_DOWN" action="this.isRegExp=true;"/>
    </handlers>
  </binding>
</bindings>
